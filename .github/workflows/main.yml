name: CICD

on:
  push:
    branches: [ trunk ]

jobs:
  change-matrix:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.set-matrix.outputs.projects }}
    steps:
      - uses: actions/checkout@v3
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@11.0
        with:
          cli: 1.11.1.1347
      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('.backend/deps.edn') }}
          restore-keys: cljdeps- 
      - name: Get all git tags
        run: |
          git fetch --prune --unshallow --tags
          echo $?
          git tag --list
      - name: "Show workspace info"
        run: clojure -M:poly info
      - name: "Get projects with change"
        id: set-matrix
        run: |
          result=$(clojure -M:poly ws get:changes:changed-or-affected-projects since:stable skip:dev)
          json_array=$(echo "${result[@]}" | jq -R '. | split(" ") | map(select(length > 0))')
          cleaned_json=$(echo -e "$json_array" | sed -e "s/\x1B\[[0-9;]*[a-zA-Z]//g")
          echo "projects="$cleaned_json
          final_result=$(echo "$cleaned_json" | jq -R '[.]' | jq -r '.[0]')
          echo "projects="$final_result
          echo 'projects={\"include\":[\"scraper-lambda\"]}' >> "$GITHUB_OUTPUT"
  
  test:
    name: Test ${{ matrix.project }}
    runs-on: ubuntu-latest
    needs: [change-matrix]
    strategy:
      fail-fast: false
      matrix:
        project: ${{fromJSON(needs.change-matrix.outputs.matrix.projects)}}
    steps:
      - uses: actions/checkout@v3
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@11.0
        with:
          cli: 1.11.1.1347
      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('.backend/deps.edn') }}
          restore-keys: cljdeps- 
      - name: Experiment
        run: echo ${{ matrix.project }}